// Code generated by protoc-gen-go.
// source: weekly_timer.proto
// DO NOT EDIT!

package PekkaService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type WeeklyTimer struct {
	Id        uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Slug      string `protobuf:"bytes,2,opt,name=slug" json:"slug,omitempty"`
	Minutes   uint32 `protobuf:"varint,3,opt,name=minutes" json:"minutes,omitempty"`
	Hours     uint32 `protobuf:"varint,4,opt,name=hours" json:"hours,omitempty"`
	Active    bool   `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
	Monday    bool   `protobuf:"varint,6,opt,name=monday" json:"monday,omitempty"`
	Tuesday   bool   `protobuf:"varint,7,opt,name=tuesday" json:"tuesday,omitempty"`
	Wednesday bool   `protobuf:"varint,8,opt,name=wednesday" json:"wednesday,omitempty"`
	Thursday  bool   `protobuf:"varint,9,opt,name=thursday" json:"thursday,omitempty"`
	Friday    bool   `protobuf:"varint,10,opt,name=friday" json:"friday,omitempty"`
	Saturday  bool   `protobuf:"varint,11,opt,name=saturday" json:"saturday,omitempty"`
	Sunday    bool   `protobuf:"varint,12,opt,name=sunday" json:"sunday,omitempty"`
}

func (m *WeeklyTimer) Reset()                    { *m = WeeklyTimer{} }
func (m *WeeklyTimer) String() string            { return proto.CompactTextString(m) }
func (*WeeklyTimer) ProtoMessage()               {}
func (*WeeklyTimer) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *WeeklyTimer) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WeeklyTimer) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *WeeklyTimer) GetMinutes() uint32 {
	if m != nil {
		return m.Minutes
	}
	return 0
}

func (m *WeeklyTimer) GetHours() uint32 {
	if m != nil {
		return m.Hours
	}
	return 0
}

func (m *WeeklyTimer) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *WeeklyTimer) GetMonday() bool {
	if m != nil {
		return m.Monday
	}
	return false
}

func (m *WeeklyTimer) GetTuesday() bool {
	if m != nil {
		return m.Tuesday
	}
	return false
}

func (m *WeeklyTimer) GetWednesday() bool {
	if m != nil {
		return m.Wednesday
	}
	return false
}

func (m *WeeklyTimer) GetThursday() bool {
	if m != nil {
		return m.Thursday
	}
	return false
}

func (m *WeeklyTimer) GetFriday() bool {
	if m != nil {
		return m.Friday
	}
	return false
}

func (m *WeeklyTimer) GetSaturday() bool {
	if m != nil {
		return m.Saturday
	}
	return false
}

func (m *WeeklyTimer) GetSunday() bool {
	if m != nil {
		return m.Sunday
	}
	return false
}

type FetchWeeklyTimersRequest struct {
	Offset uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *FetchWeeklyTimersRequest) Reset()                    { *m = FetchWeeklyTimersRequest{} }
func (m *FetchWeeklyTimersRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchWeeklyTimersRequest) ProtoMessage()               {}
func (*FetchWeeklyTimersRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *FetchWeeklyTimersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FetchWeeklyTimersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FetchWeeklyTimerByIdRequest struct {
	WeeklyTimerId uint32 `protobuf:"varint,1,opt,name=weeklyTimerId" json:"weeklyTimerId,omitempty"`
}

func (m *FetchWeeklyTimerByIdRequest) Reset()                    { *m = FetchWeeklyTimerByIdRequest{} }
func (m *FetchWeeklyTimerByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchWeeklyTimerByIdRequest) ProtoMessage()               {}
func (*FetchWeeklyTimerByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *FetchWeeklyTimerByIdRequest) GetWeeklyTimerId() uint32 {
	if m != nil {
		return m.WeeklyTimerId
	}
	return 0
}

type FetchWeeklyTimerByIdResponse struct {
	WeeklyTimer *WeeklyTimer `protobuf:"bytes,1,opt,name=weeklyTimer" json:"weeklyTimer,omitempty"`
}

func (m *FetchWeeklyTimerByIdResponse) Reset()                    { *m = FetchWeeklyTimerByIdResponse{} }
func (m *FetchWeeklyTimerByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchWeeklyTimerByIdResponse) ProtoMessage()               {}
func (*FetchWeeklyTimerByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *FetchWeeklyTimerByIdResponse) GetWeeklyTimer() *WeeklyTimer {
	if m != nil {
		return m.WeeklyTimer
	}
	return nil
}

type FetchWeeklyTimerBySlugRequest struct {
	WeeklyTimerSlug string `protobuf:"bytes,1,opt,name=weeklyTimerSlug" json:"weeklyTimerSlug,omitempty"`
}

func (m *FetchWeeklyTimerBySlugRequest) Reset()                    { *m = FetchWeeklyTimerBySlugRequest{} }
func (m *FetchWeeklyTimerBySlugRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchWeeklyTimerBySlugRequest) ProtoMessage()               {}
func (*FetchWeeklyTimerBySlugRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *FetchWeeklyTimerBySlugRequest) GetWeeklyTimerSlug() string {
	if m != nil {
		return m.WeeklyTimerSlug
	}
	return ""
}

type FetchWeeklyTimerBySlugResponse struct {
	WeeklyTimer *WeeklyTimer `protobuf:"bytes,1,opt,name=weeklyTimer" json:"weeklyTimer,omitempty"`
}

func (m *FetchWeeklyTimerBySlugResponse) Reset()                    { *m = FetchWeeklyTimerBySlugResponse{} }
func (m *FetchWeeklyTimerBySlugResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchWeeklyTimerBySlugResponse) ProtoMessage()               {}
func (*FetchWeeklyTimerBySlugResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *FetchWeeklyTimerBySlugResponse) GetWeeklyTimer() *WeeklyTimer {
	if m != nil {
		return m.WeeklyTimer
	}
	return nil
}

type CreateWeeklyTimerRequest struct {
	Slug string `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
}

func (m *CreateWeeklyTimerRequest) Reset()                    { *m = CreateWeeklyTimerRequest{} }
func (m *CreateWeeklyTimerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWeeklyTimerRequest) ProtoMessage()               {}
func (*CreateWeeklyTimerRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *CreateWeeklyTimerRequest) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

type CreateWeeklyTimerResponse struct {
}

func (m *CreateWeeklyTimerResponse) Reset()                    { *m = CreateWeeklyTimerResponse{} }
func (m *CreateWeeklyTimerResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateWeeklyTimerResponse) ProtoMessage()               {}
func (*CreateWeeklyTimerResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

type EditWeeklyTimerRequest struct {
	Id        uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Slug      string `protobuf:"bytes,2,opt,name=slug" json:"slug,omitempty"`
	Minutes   uint32 `protobuf:"varint,3,opt,name=minutes" json:"minutes,omitempty"`
	Hours     uint32 `protobuf:"varint,4,opt,name=hours" json:"hours,omitempty"`
	Active    bool   `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
	Monday    bool   `protobuf:"varint,6,opt,name=monday" json:"monday,omitempty"`
	Tuesday   bool   `protobuf:"varint,7,opt,name=tuesday" json:"tuesday,omitempty"`
	Wednesday bool   `protobuf:"varint,8,opt,name=wednesday" json:"wednesday,omitempty"`
	Thursday  bool   `protobuf:"varint,9,opt,name=thursday" json:"thursday,omitempty"`
	Friday    bool   `protobuf:"varint,10,opt,name=friday" json:"friday,omitempty"`
	Saturday  bool   `protobuf:"varint,11,opt,name=saturday" json:"saturday,omitempty"`
	Sunday    bool   `protobuf:"varint,12,opt,name=sunday" json:"sunday,omitempty"`
}

func (m *EditWeeklyTimerRequest) Reset()                    { *m = EditWeeklyTimerRequest{} }
func (m *EditWeeklyTimerRequest) String() string            { return proto.CompactTextString(m) }
func (*EditWeeklyTimerRequest) ProtoMessage()               {}
func (*EditWeeklyTimerRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *EditWeeklyTimerRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EditWeeklyTimerRequest) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *EditWeeklyTimerRequest) GetMinutes() uint32 {
	if m != nil {
		return m.Minutes
	}
	return 0
}

func (m *EditWeeklyTimerRequest) GetHours() uint32 {
	if m != nil {
		return m.Hours
	}
	return 0
}

func (m *EditWeeklyTimerRequest) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetMonday() bool {
	if m != nil {
		return m.Monday
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetTuesday() bool {
	if m != nil {
		return m.Tuesday
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetWednesday() bool {
	if m != nil {
		return m.Wednesday
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetThursday() bool {
	if m != nil {
		return m.Thursday
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetFriday() bool {
	if m != nil {
		return m.Friday
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetSaturday() bool {
	if m != nil {
		return m.Saturday
	}
	return false
}

func (m *EditWeeklyTimerRequest) GetSunday() bool {
	if m != nil {
		return m.Sunday
	}
	return false
}

type EditWeeklyTimerResponse struct {
	WeeklyTimer *WeeklyTimer `protobuf:"bytes,1,opt,name=weeklyTimer" json:"weeklyTimer,omitempty"`
}

func (m *EditWeeklyTimerResponse) Reset()                    { *m = EditWeeklyTimerResponse{} }
func (m *EditWeeklyTimerResponse) String() string            { return proto.CompactTextString(m) }
func (*EditWeeklyTimerResponse) ProtoMessage()               {}
func (*EditWeeklyTimerResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *EditWeeklyTimerResponse) GetWeeklyTimer() *WeeklyTimer {
	if m != nil {
		return m.WeeklyTimer
	}
	return nil
}

func init() {
	proto.RegisterType((*WeeklyTimer)(nil), "PekkaService.WeeklyTimer")
	proto.RegisterType((*FetchWeeklyTimersRequest)(nil), "PekkaService.FetchWeeklyTimersRequest")
	proto.RegisterType((*FetchWeeklyTimerByIdRequest)(nil), "PekkaService.FetchWeeklyTimerByIdRequest")
	proto.RegisterType((*FetchWeeklyTimerByIdResponse)(nil), "PekkaService.FetchWeeklyTimerByIdResponse")
	proto.RegisterType((*FetchWeeklyTimerBySlugRequest)(nil), "PekkaService.FetchWeeklyTimerBySlugRequest")
	proto.RegisterType((*FetchWeeklyTimerBySlugResponse)(nil), "PekkaService.FetchWeeklyTimerBySlugResponse")
	proto.RegisterType((*CreateWeeklyTimerRequest)(nil), "PekkaService.CreateWeeklyTimerRequest")
	proto.RegisterType((*CreateWeeklyTimerResponse)(nil), "PekkaService.CreateWeeklyTimerResponse")
	proto.RegisterType((*EditWeeklyTimerRequest)(nil), "PekkaService.EditWeeklyTimerRequest")
	proto.RegisterType((*EditWeeklyTimerResponse)(nil), "PekkaService.EditWeeklyTimerResponse")
}

func init() { proto.RegisterFile("weekly_timer.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0x4b, 0xaf, 0xd2, 0x40,
	0x14, 0x4e, 0xeb, 0xbd, 0x5c, 0x7a, 0x0a, 0x9a, 0x4c, 0x0c, 0x0e, 0x82, 0x86, 0x4c, 0x5c, 0x74,
	0xd5, 0x85, 0x2e, 0xdd, 0x49, 0x34, 0xb2, 0x33, 0xc5, 0xe8, 0xc2, 0x18, 0x53, 0xe9, 0x01, 0x26,
	0xf4, 0x81, 0xf3, 0x80, 0xf0, 0xb3, 0xdc, 0xfb, 0xe3, 0xcc, 0xcc, 0xb4, 0x52, 0x01, 0xe3, 0x86,
	0xe5, 0xdd, 0xf5, 0x3b, 0xdf, 0x63, 0x4e, 0xce, 0x9c, 0x29, 0x90, 0x3d, 0xe2, 0x26, 0x3f, 0x7c,
	0x53, 0xbc, 0x40, 0x11, 0x6f, 0x45, 0xa5, 0x2a, 0xd2, 0xfb, 0x80, 0x9b, 0x4d, 0x3a, 0x47, 0xb1,
	0xe3, 0x0b, 0x64, 0x3f, 0x7d, 0x08, 0x3f, 0x5b, 0xd1, 0x47, 0xa3, 0x21, 0x0f, 0xc1, 0xe7, 0x19,
	0xf5, 0x26, 0x5e, 0xd4, 0x4f, 0x7c, 0x9e, 0x11, 0x02, 0x37, 0x32, 0xd7, 0x2b, 0xea, 0x4f, 0xbc,
	0x28, 0x48, 0xec, 0x37, 0xa1, 0x70, 0x57, 0xf0, 0x52, 0x2b, 0x94, 0xf4, 0x81, 0x15, 0x36, 0x90,
	0x3c, 0x86, 0xdb, 0x75, 0xa5, 0x85, 0xa4, 0x37, 0xb6, 0xee, 0x00, 0x19, 0x40, 0x27, 0x5d, 0x28,
	0xbe, 0x43, 0x7a, 0x3b, 0xf1, 0xa2, 0x6e, 0x52, 0x23, 0x53, 0x2f, 0xaa, 0x32, 0x4b, 0x0f, 0xb4,
	0xe3, 0xea, 0x0e, 0x99, 0x7c, 0xa5, 0x51, 0x1a, 0xe2, 0xce, 0x12, 0x0d, 0x24, 0x63, 0x08, 0xf6,
	0x98, 0x95, 0x8e, 0xeb, 0x5a, 0xee, 0x58, 0x20, 0x4f, 0xa1, 0xab, 0xd6, 0x5a, 0x58, 0x32, 0xb0,
	0xe4, 0x1f, 0x6c, 0xce, 0x5a, 0x0a, 0x6e, 0x18, 0x70, 0x67, 0x39, 0x64, 0x3c, 0x32, 0x55, 0x5a,
	0x18, 0x26, 0x74, 0x9e, 0x06, 0x1b, 0x8f, 0xd4, 0xb6, 0xbf, 0x9e, 0xf3, 0x38, 0xc4, 0xde, 0x03,
	0x7d, 0x87, 0x6a, 0xb1, 0x6e, 0xcd, 0x4d, 0x26, 0xf8, 0x43, 0xa3, 0x54, 0xc6, 0x53, 0x2d, 0x97,
	0x12, 0x55, 0x3d, 0xc3, 0x1a, 0x99, 0xc9, 0xe4, 0xbc, 0xe0, 0xca, 0x0e, 0xb2, 0x9f, 0x38, 0xc0,
	0xa6, 0x30, 0x3a, 0x4d, 0x7a, 0x73, 0x98, 0x65, 0x4d, 0xd8, 0x0b, 0xe8, 0xef, 0x8f, 0xcc, 0xac,
	0xb9, 0x97, 0xbf, 0x8b, 0xec, 0x0b, 0x8c, 0x2f, 0x87, 0xc8, 0x6d, 0x55, 0x4a, 0x24, 0xaf, 0x21,
	0x6c, 0x19, 0x6c, 0x46, 0xf8, 0x72, 0x18, 0xb7, 0xd7, 0x20, 0x6e, 0x79, 0x93, 0xb6, 0x9a, 0xcd,
	0xe0, 0xd9, 0x79, 0xf8, 0x3c, 0xd7, 0xab, 0xa6, 0xc7, 0x08, 0x1e, 0xb5, 0xf4, 0x86, 0xb1, 0x27,
	0x04, 0xc9, 0x69, 0x99, 0x7d, 0x85, 0xe7, 0xff, 0x8a, 0xba, 0x46, 0xa7, 0x31, 0xd0, 0xa9, 0xc0,
	0x54, 0x61, 0x5b, 0x51, 0x37, 0xd9, 0x6c, 0xb1, 0x77, 0xdc, 0x62, 0x36, 0x82, 0xe1, 0x05, 0xbd,
	0xeb, 0x84, 0xfd, 0xf2, 0x61, 0xf0, 0x36, 0xe3, 0xea, 0x42, 0xd6, 0xfd, 0x0b, 0xf9, 0xff, 0x0b,
	0xf9, 0x04, 0x4f, 0xce, 0xa6, 0x77, 0x85, 0x3b, 0xfe, 0xde, 0xb1, 0xbf, 0xb0, 0x57, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x64, 0xe4, 0x92, 0x20, 0xd8, 0x04, 0x00, 0x00,
}
